<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.umr.raft</groupId>
	<artifactId>raft-log-replication-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Raft Log Replication Demo</name>
	<description>Demo for Log Replication using Raft Consensus Algorithm (Using Apache Ratis as Implementation)</description>
	<properties>
		<java.version>11</java.version>
		<!-- Apache Ratis version -->
		<ratis.version>2.1.0</ratis.version>
		<!-- Apache Ratis thirdparty version -->
		<ratis.thirdparty.version>0.7.0</ratis.thirdparty.version>
		<frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
		<node.version>v12.16.3</node.version>
		<yarn.version>v1.22.4</yarn.version>
		<chronicledb.version>0.2.0-prealpha</chronicledb.version>
		<event-commons.version>0.1.0-prealpha</event-commons.version>
		<lambda-jepc-ql.version>0.2.0-prealpha</lambda-jepc-ql.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- logging -->
<!--		<dependency>-->
<!--			<groupId>ch.qos.logback</groupId>-->
<!--			<artifactId>logback-core</artifactId>-->
<!--			<version>1.2.6</version>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>ch.qos.logback</groupId>-->
<!--			<artifactId>logback-classic</artifactId>-->
<!--			<version>1.2.6</version>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.slf4j</groupId>-->
<!--			<artifactId>slf4j-api</artifactId>-->
<!--			<version>1.7.32</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->


		<!-- need old version of codahale metrics as Ratis does not support v4, but spring includes it -->
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>3.2.2</version>
		</dependency>

		<!-- Apache Ratis Raft dependencies -->
		<dependency>
			<groupId>org.apache.ratis</groupId>
			<artifactId>ratis-common</artifactId>
			<version>${ratis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ratis</groupId>
			<artifactId>ratis-client</artifactId>
			<version>${ratis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ratis</groupId>
			<artifactId>ratis-server</artifactId>
			<version>${ratis.version}</version>
		</dependency>
        <dependency>
            <groupId>org.apache.ratis</groupId>
            <artifactId>ratis-grpc</artifactId>
            <version>${ratis.version}</version>
        </dependency>

		<!-- Thymeleaf templating engine for server-side rendering -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>3.0.11.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring5</artifactId>
			<version>3.0.11.RELEASE</version>
		</dependency>

		<!-- ChronicleDB -->
		<dependency>
			<groupId>de.umr.chronicledb</groupId>
			<artifactId>chronicledb-event</artifactId>
			<version>${chronicledb.version}</version>
		</dependency>
		<!-- Event Processing Commons -->
		<dependency>
			<groupId>de.umr.event</groupId>
			<artifactId>event-data-model</artifactId>
			<version>${event-commons.version}</version>
		</dependency>
		<!-- Lambda QL (of ChronicleDB/JEPC) -->
		<dependency>
			<groupId>de.umr.lambda</groupId>
			<artifactId>lambda-ql</artifactId>
			<version>${lambda-jepc-ql.version}</version>
		</dependency>
		<dependency>
			<groupId>de.umr.lambda</groupId>
			<artifactId>lambda-jepc-ql</artifactId>
			<version>${lambda-jepc-ql.version}</version>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>com.google.protobuf</groupId>-->
<!--			<artifactId>protobuf-java-util</artifactId>-->
<!--			<version>3.19.3</version>-->
<!--		</dependency>-->
		<!-- Protocol buffers for java -->
		<!-- no external dependency needed as it is included in ratis, -->
		<!-- but we need to replace dependencies created by protoc on maven build -->
		<!-- This is achieved using com.google.code.maven-replacer-plugin -->
		<!-- <dependency>-->
		<!--	<groupId>com.google.protobuf</groupId>-->
		<!--	<artifactId>protobuf-java</artifactId>-->
		<!--	<version>3.18.1</version>-->
		<!-- </dependency>-->
    </dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.5.0.Final</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- version shouldn't be needed, but IntelliJ has problems.
				See https://stackoverflow.com/questions/64639836/plugin-org-springframework-bootspring-boot-maven-plugin-not-found -->
				<version>${project.parent.version}</version>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.0</version>
				<executions>
					<execution>
						<!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
						<id>install node and yarn</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<id>yarn install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<yarnVersion>${yarn.version}</yarnVersion>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.xolstice.maven.plugins</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<version>0.5.1</version>
				<extensions>true</extensions>
				<configuration>
					<includes>
						<include>**/*.proto</include>
					</includes>
					<!-- Version 3.12.0 is mandatory to support shaded protobuf version of ratis. -->
					<!-- See https://github.com/apache/ratis/blob/master/BUILDING.md on this -->
					<!-- On ratis updates, one must have to update this dependency, too. -->
					<!-- TODO get rid of this shaded dependency somehow and use latest version -->
					<protocArtifact>com.google.protobuf:protoc:3.12.0:exe:${os.detected.classifier}</protocArtifact>
					<!-- Next line enforces generation of package/dir tree in generated-sources -->
					<!-- <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>-->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- in generated protobuf sources, replace official proto package with shaded one from ratis -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- <basedir>${project.build.directory}/generated-sources/de/umr/raft/raftlogreplicationdemo/replication/api/proto</basedir>-->
					<basedir>${project.build.directory}/generated-sources/protobuf</basedir>
					<includes>
						<include>**/*.java</include>
					</includes>
					<replacements>
						<replacement>
							<token>([^\.])com.google</token>
							<value>$1org.apache.ratis.thirdparty.com.google</value>
						</replacement>
						<replacement>
							<token>([^\.])io.grpc</token>
							<value>$1org.apache.ratis.thirdparty.io.grpc</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-compiler-plugin</artifactId>-->
<!--				<version>3.8.1</version>-->
<!--				<configuration>-->
<!--					<forceJavacCompilerUse>true</forceJavacCompilerUse>-->
<!--					<compilerArgs>-->
<!--						<arg>-Werror</arg>-->
<!--						<arg>-verbose</arg>-->
<!--					</compilerArgs>-->
<!--				</configuration>-->
<!--			</plugin>-->
		</plugins>
	</build>

</project>
